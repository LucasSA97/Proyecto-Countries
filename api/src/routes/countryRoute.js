const { Router } = require("express");
const { Sequelize } = require("sequelize");

//const { Country, Activity } = require("../db");
const {
  getCountries,
  getCountryById,
} = require("../controllers/countriesControllers");

const countryRouter = Router();

countryRouter.get("/", async (req, res) => {
  try {
    let totalCountries = await getCountries(req.query);
    res.status(200).send(totalCountries);
  } catch (error) {
    res.status(400).send({ error: error.message });
  }
});

//:id (params)
countryRouter.get("/:id", async (req, res) => {
  try {
    const { id } = req.params;
    const country = await getCountryById(id);
    res.status(200).json(country);
  } catch (error) {
    res.status(400).json({ error: error.message });
  }
});

module.exports = countryRouter;

/* GET | /countries
Obtiene un arreglo de objetos, donde cada objeto es un pa√≠s con toda su informaci√≥n.
üìç GET | /countries/:idPais
Esta ruta obtiene el detalle de un pa√≠s espec√≠fico. Es decir que devuelve un objeto con la informaci√≥n pedida en el detalle de un pa√≠s.
El pa√≠s es recibido por par√°metro (ID de tres letras del pa√≠s).
Tiene que incluir los datos de las actividades tur√≠sticas asociadas a este pa√≠s.
üìç GET | /countries/name?="..."
Esta ruta debe obtener todos aquellos pa√≠ses que coinciden con el nombre recibido por query. (No es necesario que sea una coincidencia exacta).
Debe poder buscarlo independientemente de may√∫sculas o min√∫sculas.
Si no existe el pa√≠s, debe mostrar un mensaje adecuado.*/
